export declare const containmentWebOutput = "/**\n * This file was generated from MyWidget.xml\n * WARNING: All changes made to this file will be overwritten\n * @author Mendix Widgets Framework Team\n */\nimport { ComponentType, CSSProperties, ReactNode } from \"react\";\nimport { ActionValue, EditableValue } from \"mendix\";\n\nexport interface MyWidgetContainerProps {\n    name: string;\n    class: string;\n    style?: CSSProperties;\n    tabIndex?: number;\n    content: ReactNode;\n    description: EditableValue<string>;\n    action?: ActionValue;\n}\n\nexport interface MyWidgetPreviewProps {\n    /**\n     * @deprecated Deprecated since version 9.18.0. Please use class property instead.\n     */\n    className: string;\n    class: string;\n    style: string;\n    styleObject?: CSSProperties;\n    readOnly: boolean;\n    renderMode: \"design\" | \"xray\" | \"structure\";\n    translate: (text: string) => string;\n    content: { widgetCount: number; renderer: ComponentType<{ children: ReactNode; caption?: string }> };\n    description: string;\n    action: {} | null;\n}\n";
export declare const containmentNativeOutput = "export interface MyWidgetProps<Style> {\n    name: string;\n    style: Style[];\n    content: ReactNode;\n    description: EditableValue<string>;\n    action?: ActionValue;\n}";
