export declare const expressionWebOutput = "/**\n * This file was generated from MyWidget.xml\n * WARNING: All changes made to this file will be overwritten\n * @author Mendix Widgets Framework Team\n */\nimport { CSSProperties } from \"react\";\nimport { DynamicValue, EditableValue, ListValue, ListExpressionValue } from \"mendix\";\nimport { Big } from \"big.js\";\n\nexport interface MyWidgetContainerProps {\n    name: string;\n    class: string;\n    style?: CSSProperties;\n    tabIndex?: number;\n    myDataSource: ListValue;\n    expressionReturnTypeType: DynamicValue<string>;\n    expressionReturnTypeTypeDataSource: ListExpressionValue<string>;\n    expressionReturnTypeAssignableTo: DynamicValue<string | Big | boolean>;\n    expressionReturnTypeAssignableToDataSource: ListExpressionValue<string | Big | boolean>;\n    myAttribute: EditableValue<string | Big | boolean>;\n}\n\nexport interface MyWidgetPreviewProps {\n    /**\n     * @deprecated Deprecated since version 9.18.0. Please use class property instead.\n     */\n    className: string;\n    class: string;\n    style: string;\n    styleObject?: CSSProperties;\n    readOnly: boolean;\n    renderMode: \"design\" | \"xray\" | \"structure\";\n    translate: (text: string) => string;\n    myDataSource: {} | { caption: string } | { type: string } | null;\n    expressionReturnTypeType: string;\n    expressionReturnTypeTypeDataSource: string;\n    expressionReturnTypeAssignableTo: string;\n    expressionReturnTypeAssignableToDataSource: string;\n    myAttribute: string;\n}\n";
export declare const expressionNativeOutput = "export interface MyWidgetProps<Style> {\n    name: string;\n    style: Style[];\n    myDataSource: ListValue;\n    expressionReturnTypeType: DynamicValue<string>;\n    expressionReturnTypeTypeDataSource: ListExpressionValue<string>;\n    expressionReturnTypeAssignableTo: DynamicValue<string | Big | boolean>;\n    expressionReturnTypeAssignableToDataSource: ListExpressionValue<string | Big | boolean>;\n    myAttribute: EditableValue<string | Big | boolean>;\n}";
