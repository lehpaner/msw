export declare const selectionWebOutput = "/**\n * This file was generated from MyWidget.xml\n * WARNING: All changes made to this file will be overwritten\n * @author Mendix Widgets Framework Team\n */\nimport { CSSProperties } from \"react\";\nimport { ListValue, SelectionSingleValue, SelectionMultiValue } from \"mendix\";\n\nexport interface MyWidgetContainerProps {\n    name: string;\n    class: string;\n    style?: CSSProperties;\n    tabIndex?: number;\n    selectionAll?: SelectionSingleValue | SelectionMultiValue;\n    selectionSingleMulti: SelectionSingleValue | SelectionMultiValue;\n    selectionMulti: SelectionMultiValue;\n    optionalSelectionAll?: SelectionSingleValue | SelectionMultiValue;\n    optionalSelectionSingleMulti?: SelectionSingleValue | SelectionMultiValue;\n    optionalSelectionMulti?: SelectionMultiValue;\n    optionalDataSource?: ListValue;\n    requiredDataSource: ListValue;\n}\n\nexport interface MyWidgetPreviewProps {\n    /**\n     * @deprecated Deprecated since version 9.18.0. Please use class property instead.\n     */\n    className: string;\n    class: string;\n    style: string;\n    styleObject?: CSSProperties;\n    readOnly: boolean;\n    renderMode: \"design\" | \"xray\" | \"structure\";\n    translate: (text: string) => string;\n    selectionAll: \"None\" | \"Single\" | \"Multi\";\n    selectionSingleMulti: \"Single\" | \"Multi\";\n    selectionMulti: \"Multi\";\n    optionalSelectionAll: \"None\" | \"Single\" | \"Multi\";\n    optionalSelectionSingleMulti: \"Single\" | \"Multi\" | \"None\";\n    optionalSelectionMulti: \"Multi\" | \"None\";\n    optionalDataSource: {} | { caption: string } | { type: string } | null;\n    requiredDataSource: {} | { caption: string } | { type: string } | null;\n    onSelectionAllChange: {} | null;\n}\n";
export declare const selectionNativeOutput = "export interface MyWidgetProps<Style> {\n    name: string;\n    style: Style[];\n    selectionAll?: SelectionSingleValue | SelectionMultiValue;\n    selectionSingleMulti: SelectionSingleValue | SelectionMultiValue;\n    selectionMulti: SelectionMultiValue;\n    optionalSelectionAll?: SelectionSingleValue | SelectionMultiValue;\n    optionalSelectionSingleMulti?: SelectionSingleValue | SelectionMultiValue;\n    optionalSelectionMulti?: SelectionMultiValue;\n    optionalDataSource?: ListValue;\n    requiredDataSource: ListValue;\n}";
